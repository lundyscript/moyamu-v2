// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole @default(USER)
  accounts      Account[]
  isTwoFactorEnabled  Boolean @default(false)
  twoFactorConfirmation TwoFactorConfirmation?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}

model Buyers {
  id            String    @id @default(cuid())
  name          String
  phoneNumber   String
  address       String
  notes         String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Products {
  id            String    @id @default(cuid())
  name          String
  description   String
  price         String
  stock         String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Orders {
  id            String    @id @default(cuid())
  invoice       String
  buyer         String    
  phoneNumber   String
  notes         String
  delivery      Boolean   @default(true)
  payment       Boolean   @default(true)
  product       String
  quantity      String
  price         String
  subtotal      String
  orderedAt     DateTime
  paidAt        DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Spends {
  id            String    @id @default(cuid())
  category      String
  name          String
  price         String
  quantity      String
  subtotal      String
  issuedAt      DateTime
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Purchases {
  id            String    @id @default(cuid())
  name          String
  price         String
  quantity      String
  subtotal      String
  purchasedAt   DateTime
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Ingredients {
  id            String    @id @default(cuid())
  name          String
  price         String
  stock         String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Packages {
  id            String    @id @default(cuid())
  employee      String
  product       String
  quantity      String
  packedAt      DateTime
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Employees {
  id            String    @id @default(cuid())
  name          String
  position      String
  image         String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}